const { PrismaClient } = require("@prisma/client");
const bcrypt = require("bcrypt");
const { faker } = require("@faker-js/faker");

const prisma = new PrismaClient();

async function seedUsers() {
  const users = [];
  const numUsers = 50;

  for (let i = 0; i < numUsers; i++) {
    const passwordSalt = await bcrypt.genSalt();
    const passwordHash = await bcrypt.hash(
      faker.internet.password(),
      passwordSalt
    );
    const user = await prisma.user.create({
      data: {
        isAdmin: false,
        credentials: {
          create: {
            username: faker.internet.userName(),
            hasher: "bcrypt",
            passwordHash: passwordHash,
            passwordSalt: passwordSalt,
          },
        },
        userInfo: {
          create: {
            firstName: faker.person.firstName(),
            lastName: faker.person.lastName(),
            email: faker.internet.email(),
            phone: faker.phone.number(),
            avatarLink: faker.image.avatar(),
            // emailValidated: faker.datatype.boolean(
            //   faker.number.int({ min: 0, max: 1 })
            // ),
            // phoneValidated: faker.datatype.boolean(
            //   faker.number.int({ min: 0, max: 1 })
            // ),
            // bio: faker.lorem.paragraph(),
          },
        },
        socialProfiles: {
          createMany: {
            slug: faker.helpers.slugify(faker.company.name()),
            name: faker.company.name(),
            vendorBio: faker.lorem.paragraph(),
            avatarUrl: faker.image.avatar(),
          },
        },
      },
    });
    users.push(user);
  }

  console.log(`Seeded ${users.length} users`);
}

// vendors: {
//   create: {
//     data: [
//       {
//         slug: faker.helpers.slugify(faker.company.name()),
//         name: faker.company.name(),
//         bio: faker.lorem.paragraph(),
//         avatarUrl: faker.image.avatar(),
//         email: faker.internet.email(),
//         phone: faker.phone.number(),
//         emailValidated: faker.datatype.boolean(),
//         phoneValidated: faker.datatype.boolean(),
//         socialProfiles: {
//           createMany: {
//             slug: faker.helpers.slugify(faker.company.name()),
//             name: faker.company.name(),
//             vendorBio: faker.lorem.paragraph(),
//             avatarUrl: faker.image.avatar(),
//           },
//         },
//         products: {
//           createMany: {
//             data: [
//               {
//                 categoryId: faker.number.int({ min: 1, max: 10 }),
//                 title: faker.commerce.productName(),
//                 picture: faker.image.url(),
//                 summary: faker.lorem.sentence(),
//                 description: faker.lorem.paragraph(),
//                 price: parseFloat(faker.commerce.price()),
//                 discountType: faker.helpers.arrayElements(
//                   ["percentage", "fixed"],
//                   1
//                 ),
//                 discountValue: faker.number.int({
//                   min: 10,
//                   max: 50,
//                 }),
//               },
//               {
//                 categoryId: faker.number.int({ min: 1, max: 10 }),
//                 title: faker.commerce.productName(),
//                 picture: faker.image.url(),
//                 summary: faker.lorem.sentence(),
//                 description: faker.lorem.paragraph(),
//                 price: parseFloat(faker.commerce.price()),
//                 discountType: faker.helpers.arrayElements(
//                   ["percentage", "fixed"],
//                   1
//                 ),
//                 discountValue: faker.number.int({
//                   min: 10,
//                   max: 50,
//                 }),
//               },
//               {
//                 categoryId: faker.number.int({ min: 1, max: 10 }),
//                 title: faker.commerce.productName(),
//                 picture: faker.image.url(),
//                 summary: faker.lorem.sentence(),
//                 description: faker.lorem.paragraph(),
//                 price: parseFloat(faker.commerce.price()),
//                 discountType: faker.helpers.arrayElements([
//                   "percentage",
//                   "fixed",
//                 ]),
//                 discountValue: faker.number.int({
//                   min: 10,
//                   max: 50,
//                 }),
//               },
//               {
//                 categoryId: faker.number.int({ min: 1, max: 10 }),
//                 title: faker.commerce.productName(),
//                 picture: faker.image.url(),
//                 summary: faker.lorem.sentence(),
//                 description: faker.lorem.paragraph(),
//                 price: parseFloat(faker.commerce.price()),
//                 discountType: faker.helpers.arrayElements(
//                   ["percentage", "fixed"],
//                   1
//                 ),
//                 discountValue: faker.number.int({
//                   min: 10,
//                   max: 50,
//                 }),
//               },
//             ],
//           },
//         },
//       },
//     ],
//   },
// },

async function seedCategories() {
  const categories = [];
  const numCategories = 10;

  for (let i = 0; i < numCategories; i++) {
    const category = await prisma.category.create({
      data: {
        slug: faker.helpers.slugify(faker.commerce.department()),
        name: faker.commerce.department(),
        description: faker.lorem.sentence(),
        tags: faker.random.words(3).split(" "),
      },
    });
    categories.push(category);
  }

  console.log(`Seeded ${categories.length} categories`);
}

async function seedProducts() {
  const products = [];
  const numProducts = 100;
  const categories = await prisma.category.findMany();
  const vendors = await prisma.vendor.findMany();

  for (let i = 0; i < numProducts; i++) {
    const product = await prisma.product.create({
      data: {
        categoryId: faker.helpers.arrayElements(categories).id,
        vendorId: faker.helpers.arrayElements(vendors).id,
        title: faker.commerce.productName(),
        picture: faker.image.url(),
        summary: faker.lorem.sentence(),
        description: faker.lorem.paragraph(),
        price: parseFloat(faker.commerce.price()),
        discountType: faker.helpers.arrayElements(["percentage", "fixed"]),
        discountValue: faker.number.int({ min: 10, max: 50 }),
      },
    });
    products.push(product);
  }

  console.log(`Seeded ${products.length} products`);
}

async function seed() {
  await seedUsers();
  // await seedCategories();
  // await seedProducts();
}

seed()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
