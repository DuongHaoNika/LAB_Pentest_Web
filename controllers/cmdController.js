import { exec } from "child_process"
import prisma from "../models/prisma";

// [GET] /test
const cmd = async (req, res) => {
    const obj = req.query.domain
    const osCmd = await prisma.vulnSetting.findUnique({
        where: {
            name: "OS Command Injection"
        }
    })
    if(osCmd.status == "Easy") {
        exec(`nslookup ${obj}`, (error, stdout, stderr) => {
            if (error) {
              return res.send(`Error: ${error.message}`);
            }
          
            if (stderr) {
              return res.send(`stderr: ${stderr}`);
            }
          
            return res.send(`${stdout}`);
          });
    }
    else if(osCmd.status == "Medium") {
        exec(`nslookup ${obj}`, (error, stdout, stderr) => {
            if (error) {
              return res.send(`nslookup`);
            }
          
            if (stderr) {
              return res.send(`nslookup`);
            }
          
            return res.send(`nslookup`);
          });
    }
    else if(osCmd.status == "Hard"){
      const blacklist = ['curl', 'nsloopup', 'wget', 'nc', 'ssh', 'scp', 'rsync', 'sendmail', 'ftp', 'sftp', 'socat', 'telnet']
      for(let i = 0; i < blacklist.length; i++){
        const x = blacklist[i]
        if(obj.includes(x)) {
          console.log(x)
          return res.send(`nslookup`);
        }
      }
      exec(`nslookup ${obj}`, (error, stdout, stderr) => {
        if (error) {
          return res.send(`nslookup`);
        }
      
        if (stderr) {
          return res.send(`nslookup`);
        }
      
        return res.send(`nslookup`);
      });
    }
    else {
        const whitelist = /^[a-zA-Z0-9.]+$/
        const check = whitelist.test(obj)
        if(!check) {
            return res.send("input have invalid character")
        }
        else {
            exec(`nslookup ${obj}`, (error, stdout, stderr) => {
                if (error) {
                  return res.send(`Error: ${error.message}`);
                }
              
                if (stderr) {
                  return res.send(`stderr: ${stderr}`);
                }
              
                return res.send(`${stdout}`);
              });
        }
    }
}

export default { cmd }