import libxmljs from "libxmljs"
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient()

// [GET] shop-cart
const getShopCart = (req, res) => {
  return res.render("shop-cart");
};

// [POST] shop-cart
const addCart = async (req, res) => {
  // const xmlData = `<?xml version="1.0" encoding="UTF-8"?>
  // <!DOCTYPE data [
  // <!ENTITY example SYSTEM "file:///etc/passwd">
  // ]>
  // <data>&example;</data>`;

  try {
    let xmlDoc
    const xxeStatus = await prisma.vulnSetting.findUnique({
      where: {
        name: "XXE"
      }
    })
    if(xxeStatus.status === "No") {
      if(req.body.includes('<!ENTITY')) console.log('blacklist!')
      xmlDoc = libxmljs.parseXml(req.body, { replaceEntities: false, preserveWhitespace: true })
    }
    else {
      xmlDoc = libxmljs.parseXml(req.body, { replaceEntities: true, preserveWhitespace: true })
    }
    console.log(req.body)
    const productIdNode = xmlDoc.get('//productId')
    const quantityNode = xmlDoc.get('//quantity')
    const productId = productIdNode ? productIdNode.text() : undefined
    const quantity = quantityNode ? quantityNode.text() : undefined
    const data = {
      productId: productId,  
      quantity: quantity,                
      redirectUrl: '/shop-cart'      
    };

    return res.json(data);
  } catch (error) {
    console.error("Error parsing XML:", error);
  }
  res.json({ redirectUrl: '/shop-cart' })
}

export default { getShopCart, addCart };
