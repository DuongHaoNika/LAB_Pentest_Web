import { PrismaClient } from '@prisma/client';
import bodyParser from 'body-parser';
import express from "express";
import libxmljs  from "libxmljs";
// import session from 'express-session';

const prisma = new PrismaClient();
const app = express();

// const getPageEmail = (req, res) => {
//     return res.render("index");
//   };

const subscribeMail = async (req, res) => {
    // XXE payload for demonstration purposes
    const xmlData = `<?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE data [
    <!ENTITY example SYSTEM "file:///etc/passwd">
    ]>
    <data>&example;</data>`;

    try {
        console.log('Received XML:', req.body.toString()); // Log the raw XML data
        // Parse the XML with external entity loading enabled
        const xmlDoc = libxmljs.parseXml(req.body.toString(), { replaceEntities: true, preserveWhitespace: true, dtdload: true });
        const data = xmlDoc.root().text();
        console.log('Parsed data:', data);

        // Set a success message or perform any additional processing
        // req.session.successMessage = 'Subscribe successfully!';

        // Respond with a JSON object containing the redirect URL
        // res.json({ redirectUrl: '/' });
        res.json({ redirectUrl: '/' })
    } catch (error) {
        console.error('Error parsing XML:', error);
        res.status(500).send('Internal Server Error');
    }
};

export default { subscribeMail }



// import { PrismaClient } from '@prisma/client';
// import libxmljs from 'libxmljs';

// const prisma = new PrismaClient();

// const subscribeMail = async (req, res) => {
//     try {
//         const xmlInput = req.body.email; // Get the XML data from the request body
//         const emailDoc = libxmljs.parseXmlString(xmlInput, { noent: true, noblanks: true }); // Parse the XML

//         // Extract the email from the parsed XML
//         const emailNode = emailDoc.get('//subscribe');
//         if (!emailNode) {
//             return res.status(400).send('Invalid XML format');
//         }

//         const email = emailNode.text();
//         console.log('Extracted email:', email);

//         res.send('Email subscribed successfully');
//     } catch (error) {
//         console.error(error);
//         res.status(500).send('An error occurred');
//     }
// };

// export default subscribeMail;
