// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  username       String
  hashPassword   String
  firstName      String
  lastName       String
  email          String
  phone          String
  avatarUrl      String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  lastLogin      DateTime?
  emailValidated Boolean
  phoneValidated Boolean
  bio            String
  socialProfile  SocialProfile[]
  cart           Cart[]
  review         Review[]
  vendor         Vendor[]
}

model SocialProfile {
  id          Int     @id @default(autoincrement())
  userId      String  @unique
  platform    String
  platformUrl String?
  user        User    @relation(fields: [userId], references: [id])
}

model Cart {
  id         Int        @id @default(autoincrement())
  userId     String     @unique
  user       User       @relation(fields: [userId], references: [id])
  cartItem   CartItem[]
  cartItemId Int?
}

model CartItem {
  id          Int       @id @default(autoincrement())
  cartId      Int
  productId   Int
  quantity    Int
  price       Int
  shipping_id Int
  cart        Cart      @relation(fields: [cartId], references: [id])
  Shipping    Shipping? @relation(fields: [shippingId], references: [id])
  shippingId  Int?
}

model Product {
  id              Int               @id @default(autoincrement())
  categoryId      Int?
  vendorId        Int?
  voucherId       Int?
  title           String
  picture         String?
  summary         String?
  description     String?
  price           Float?
  discountType    String?
  discountValue   Float?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  review          Review[]
  ProductVoucher  ProductVoucher[]
  ProductShipping ProductShipping[]
  ProductTag      ProductTag[]
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    String
  productId Int
  rating    Int
  comment   String
  createdAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Vendor {
  id        String   @id @default(uuid())
  ownedId   String   @unique
  slug      String
  vendorBio String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [ownedId], references: [id])
}

model VendorSocial {
  id       Int    @id @default(autoincrement())
  vendorId Int
  platform String
  url      String
}

model Voucher {
  id                 Int              @id @default(autoincrement())
  code               String
  voucherDescription String
  discountValue      Int
  discountType       String
  timesUsed          Int
  maxUsage           Int
  voucherStartDate   DateTime
  voucherEndDate     DateTime
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @default(now())
  createdBy          String
  updatedBy          String
  productVoucher     ProductVoucher[]
}

model ProductVoucher {
  id        Int     @id @default(autoincrement())
  productId Int
  voucherId Int
  product   Product @relation(fields: [productId], references: [id])
  voucher   Voucher @relation(fields: [voucherId], references: [id])
}

model Shipping {
  id              Int               @id @default(autoincrement())
  name            String
  active          Boolean
  iconPath        String
  createdAt       DateTime
  updatedAt       DateTime
  createdBy       String
  updatedBy       String
  cartItem        CartItem[]
  productShipping ProductShipping[]
}

model ProductShipping {
  productId      Int
  shippingId     Int
  shippingCharge Int
  free           Boolean
  estimattedDays Int
  product        Product  @relation(fields: [productId], references: [id])
  shipping       Shipping @relation(fields: [shippingId], references: [id])

  @@id([productId, shippingId])
}

model ProductTag {
  id         Int     @id @default(autoincrement())
  tag_id     Int
  product_id Int
  tag        Tag     @relation(fields: [tag_id], references: [id])
  Product    Product @relation(fields: [product_id], references: [id])
}

model Tag {
  id         Int          @id @default(autoincrement())
  tagName    String
  iconPath   String
  createdAt  DateTime
  updatedAt  DateTime
  createdBy  String
  updatedBy  String
  productTag ProductTag[]
}

model Admin {
  id           String      @id @default(uuid())
  firstName    String
  lastName     String
  phoneNumber  String
  email        String
  passwordHash String
  avatarUrl    String
  createdAt    DateTime
  updatedAt    DateTime
  adminRole    AdminRole[]
}

model AdminRole {
  adminId String
  roleId  Int
  Admin   Admin  @relation(fields: [adminId], references: [id])
  Role    Role   @relation(fields: [roleId], references: [id])

  @@id([adminId, roleId])
}

model Role {
  id         Int         @id @default(autoincrement())
  roleName   String
  privileges String[]
  adminRole  AdminRole[]
}

model Slideshow {
  id        Int      @id @default(autoincrement())
  hrefUrl   String
  imageUrl  String
  clicks    Int
  createdAt DateTime
  updatedAt DateTime
}
