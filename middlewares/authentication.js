import jwt from 'jsonwebtoken';
import { PrismaClient } from '@prisma/client';

const Authentication = async (req, res, next) => {
    const mysecretkey = process.env.JWT_SECRET
    const prisma = new PrismaClient()
    console.log(req.path)
    try{
        if(req.path == '/page-login' || req.path == '/page-register' || req.path == '/settings' || req.path == '/page-register/createUser'){
            next()
        }
        else{
            const ck = req.headers.cookie
            const indexOfJWT = ck.indexOf("jwt")
            let jwtToken = ck.substr(indexOfJWT + 1)
            const idx = jwtToken.indexOf(";")
            if(idx == -1){
                jwtToken = jwtToken.split("=")[1]
            }
            else{
                jwtToken = jwtToken.substr(1, idx - 1)
            }
            // const decode = jwt.verify(jwtToken, mysecretkey)
            const decode = jwt.verify(jwtToken, null, {algorithms: ['none', 'HS256', 'RS256']})
            const id = decode.id
            const result = await prisma.credential.findUnique({
                where: {
                    id: id
                },
            })
            if (result != null){
                next()
            }
        }
    }
    catch(err){
        console.log(err)
        return res.redirect('/page-login')
    }
}

export default Authentication